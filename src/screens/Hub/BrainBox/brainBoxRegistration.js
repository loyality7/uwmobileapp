import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, StyleSheet,Image, TouchableOpacity, Alert, KeyboardAvoidingView, ScrollView, Platform } from 'react-native';
import { RadioButton } from 'react-native-paper';
import axios from 'axios';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { useNavigation } from '@react-navigation/native';
import Svg, {Path} from 'react-native-svg';
import { getMethod ,postMethod } from '../../../helpers/index';

const BrainBoxRegistration = () => {
  const navigation = useNavigation();
  const [step, setStep] = useState(1);
  const [formData, setFormData] = useState({
    // These will be auto-filled
    firstName: '',
    lastName: '',
    email: '',
    phoneNumber: '',
    
    // User will fill these
    dateOfBirth: '',
    grade: '',
    institute: '',
    instituteCity: '',
    
    // Personal Details
    aadhar: '',
    pan: '',
    userType: 'student',
    
    // Artist Details
    portfolioWebsite: '',
    mediumOfArt: '',
    previousExhibitions: '',
    artistShopName: '',
    artistryAchievement: '',
    
    // Address Details
    addressLine1: '',
    addressLine2: '',
    city: '',
    district: '',
    state: '',
    pincode: '',
  });

  // Fetch user details on component mount
  useEffect(() => {
    const fetchUserDetails = async () => {
      try {
        const token = await AsyncStorage.getItem("@token");
        if (!token) {
          console.error("No authentication token found.");
          return;
        }

        const profileResponse = await getMethod({
          url: 'customers/secure/profile',
          token: token
        });

        if (profileResponse?.data?.customer) {
          const customer = profileResponse.data.customer;
          
          // Auto-fill only the basic user details
          setFormData(prev => ({
            ...prev,
            firstName: customer.firstName || '',
            lastName: customer.lastName || '',
            email: customer.email || '',
            phoneNumber: customer.phoneNumber || '',
            dateOfBirth: customer.dateOfBirth || '',
            grade: customer.grade || '',
            institute: customer.institute || '',
            instituteCity: customer.instituteCity || '',


          }));
        }
      } catch (error) {
        console.error("Error fetching user details:", error);
      }
    };

    fetchUserDetails();
  }, []);

  const renderStep1 = () => (
    <KeyboardAvoidingView 
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      style={styles.stepContainer}
    >
      <ScrollView 
        contentContainerStyle={styles.scrollContent}
        keyboardShouldPersistTaps="handled"
      >
        <View style={styles.headerContainer}>
          <View style={styles.logoCircle}>
            <Image source={require('../../../assets/logo.png')} style={styles.logo} />
          </View>
          <View style={styles.headerTextContainer}>
            <Text style={styles.headerTitle}>Hi {formData.firstName},</Text>
            <Text style={styles.headerSubtitle}>Few more details to go!</Text>
          </View>
        </View>

        <View style={styles.formSection}>
          <Text style={styles.sectionTitle}>Personal Details</Text>
          <Text style={styles.stepIndicator}>1/3</Text>
          
          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="15" height="18" viewBox="0 0 15 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <Path d="M7.8027 0C8.03607 0.0484342 8.27383 0.0880621 8.5028 0.140899C10.0967 0.515164 11.4573 2.03424 11.673 3.66339C11.8139 4.73334 11.6598 5.74606 11.0522 6.6531C10.2464 7.85514 9.13684 8.55524 7.6662 8.65651C5.73324 8.7886 4.14812 7.6526 3.42601 6.10711C2.74793 4.65849 3.02093 2.72993 4.08648 1.52788C4.73814 0.796962 5.52189 0.286202 6.49498 0.0880621C6.6623 0.0528373 6.82521 0.0264186 6.99253 0C7.26112 0 7.53411 0 7.8027 0Z" fill="#8D8D95"/>
                <Path d="M7.49889 17.9999C6.07669 17.9999 4.65008 17.9999 3.22788 17.9999C2.49696 17.9999 1.81008 17.8546 1.20245 17.4231C0.515562 16.9299 0.110476 16.2562 0.0400261 15.4241C-0.0876641 13.9358 0.0840572 12.474 0.643252 11.0826C0.977888 10.2548 1.47544 9.53711 2.29442 9.1012C2.80518 8.82821 3.35557 8.69611 3.93237 8.70492C4.1129 8.70932 4.30664 8.79738 4.46955 8.88545C4.74255 9.03515 4.99352 9.22008 5.25771 9.37859C6.75917 10.2988 8.26063 10.2988 9.75769 9.36979C9.96463 9.2421 10.1804 9.11441 10.3741 8.96911C10.7352 8.70052 11.1271 8.66089 11.5586 8.72693C12.7254 8.89866 13.5532 9.53711 14.108 10.5542C14.6055 11.4657 14.8301 12.452 14.9269 13.4735C14.9798 13.9931 15.0018 14.5126 14.9974 15.0322C14.9798 16.6349 13.901 17.7973 12.3071 17.9647C12.1133 17.9867 11.9196 17.9955 11.7303 17.9955C10.3257 17.9999 8.91229 17.9999 7.49889 17.9999Z" fill="#8D8D95"/>
            </Svg>

            </View>
            <TextInput
              style={styles.input}
              placeholder="Personal Aadhar"
              placeholderTextColor="#979797"
              value={formData.aadhar}
              onChangeText={(text) => setFormData({...formData, aadhar: text})}
            />
          </View>
          
          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="15" height="18" viewBox="0 0 15 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <Path d="M7.8027 0C8.03607 0.0484342 8.27383 0.0880621 8.5028 0.140899C10.0967 0.515164 11.4573 2.03424 11.673 3.66339C11.8139 4.73334 11.6598 5.74606 11.0522 6.6531C10.2464 7.85514 9.13684 8.55524 7.6662 8.65651C5.73324 8.7886 4.14812 7.6526 3.42601 6.10711C2.74793 4.65849 3.02093 2.72993 4.08648 1.52788C4.73814 0.796962 5.52189 0.286202 6.49498 0.0880621C6.6623 0.0528373 6.82521 0.0264186 6.99253 0C7.26112 0 7.53411 0 7.8027 0Z" fill="#8D8D95"/>
                <Path d="M7.49889 17.9999C6.07669 17.9999 4.65008 17.9999 3.22788 17.9999C2.49696 17.9999 1.81008 17.8546 1.20245 17.4231C0.515562 16.9299 0.110476 16.2562 0.0400261 15.4241C-0.0876641 13.9358 0.0840572 12.474 0.643252 11.0826C0.977888 10.2548 1.47544 9.53711 2.29442 9.1012C2.80518 8.82821 3.35557 8.69611 3.93237 8.70492C4.1129 8.70932 4.30664 8.79738 4.46955 8.88545C4.74255 9.03515 4.99352 9.22008 5.25771 9.37859C6.75917 10.2988 8.26063 10.2988 9.75769 9.36979C9.96463 9.2421 10.1804 9.11441 10.3741 8.96911C10.7352 8.70052 11.1271 8.66089 11.5586 8.72693C12.7254 8.89866 13.5532 9.53711 14.108 10.5542C14.6055 11.4657 14.8301 12.452 14.9269 13.4735C14.9798 13.9931 15.0018 14.5126 14.9974 15.0322C14.9798 16.6349 13.901 17.7973 12.3071 17.9647C12.1133 17.9867 11.9196 17.9955 11.7303 17.9955C10.3257 17.9999 8.91229 17.9999 7.49889 17.9999Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="Personal PAN"
              placeholderTextColor="#979797"
              value={formData.pan}
              onChangeText={(text) => setFormData({...formData, pan: text})}
            />
          </View>
          
          <Text style={styles.radioTitle}>What type of user are you</Text>
          <RadioButton.Group
            onValueChange={value => setFormData({...formData, userType: value})}
            value={formData.userType}
          >
            <View style={styles.radioItem}>
              <RadioButton.Android value="student" color="#F69776" />
              <Text style={styles.radioLabel}>I'm a student</Text>
            </View>
            <View style={styles.radioItem}>
              <RadioButton.Android value="professional" color="#F69776" />
              <Text style={styles.radioLabel}>I'm a professional artist</Text>
            </View>
            <View style={styles.radioItem}>
              <RadioButton.Android value="hobby" color="#F69776" />
              <Text style={styles.radioLabel}>I do art for hobby</Text>
            </View>
          </RadioButton.Group>
        </View>

        <TouchableOpacity 
          style={styles.nextButton}
          onPress={() => setStep(2)}
        >
          <Text style={styles.buttonText}>Next</Text>
        </TouchableOpacity>
      </ScrollView>
      
      <View style={styles.ellipse1} />
      <View style={styles.ellipse2} />
    </KeyboardAvoidingView>
  );

  const renderStep2 = () => (
    <KeyboardAvoidingView 
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      style={styles.stepContainer}
    >
      <ScrollView 
        contentContainerStyle={styles.scrollContent}
        keyboardShouldPersistTaps="handled"
      >
        <View style={styles.headerImageContainer}>
          <Image 
            source={require('../../../assets/bank-icon.png')} 
            style={styles.bankImage}
          />
        </View>

        <View style={styles.formSection}>
          <Text style={styles.sectionTitle}>Fill in your details</Text>
          <Text style={styles.stepIndicator}>2/3</Text>
          
          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="15" height="18" viewBox="0 0 15 18" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M7.8027 0C8.03607 0.0484342 8.27383 0.0880621 8.5028 0.140899C10.0967 0.515164 11.4573 2.03424 11.673 3.66339C11.8139 4.73334 11.6598 5.74606 11.0522 6.6531C10.2464 7.85514 9.13684 8.55524 7.6662 8.65651C5.73324 8.7886 4.14812 7.6526 3.42601 6.10711C2.74793 4.65849 3.02093 2.72993 4.08648 1.52788C4.73814 0.796962 5.52189 0.286202 6.49498 0.0880621C6.6623 0.0528373 6.82521 0.0264186 6.99253 0C7.26112 0 7.53411 0 7.8027 0Z" fill="#8D8D95"/>
              <Path d="M7.49889 17.9999C6.07669 17.9999 4.65008 17.9999 3.22788 17.9999C2.49696 17.9999 1.81008 17.8546 1.20245 17.4231C0.515562 16.9299 0.110476 16.2562 0.0400261 15.4241C-0.0876641 13.9358 0.0840572 12.474 0.643252 11.0826C0.977888 10.2548 1.47544 9.53711 2.29442 9.1012C2.80518 8.82821 3.35557 8.69611 3.93237 8.70492C4.1129 8.70932 4.30664 8.79738 4.46955 8.88545C4.74255 9.03515 4.99352 9.22008 5.25771 9.37859C6.75917 10.2988 8.26063 10.2988 9.75769 9.36979C9.96463 9.2421 10.1804 9.11441 10.3741 8.96911C10.7352 8.70052 11.1271 8.66089 11.5586 8.72693C12.7254 8.89866 13.5532 9.53711 14.108 10.5542C14.6055 11.4657 14.8301 12.452 14.9269 13.4735C14.9798 13.9931 15.0018 14.5126 14.9974 15.0322C14.9798 16.6349 13.901 17.7973 12.3071 17.9647C12.1133 17.9867 11.9196 17.9955 11.7303 17.9955C10.3257 17.9999 8.91229 17.9999 7.49889 17.9999Z" fill="#8D8D95"/>
            </Svg>

            </View>
            <TextInput
              style={styles.input}
              placeholder="Portfolio Website/Link"
              placeholderTextColor="#979797"
              value={formData.portfolioWebsite}
              onChangeText={(text) => setFormData({...formData, portfolioWebsite: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="22" height="15" viewBox="0 0 22 15" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M0 1.62124C0.0573909 1.44385 0.114782 1.27168 0.187825 1.04211C2.33216 3.22819 4.4504 5.38817 6.51126 7.49598C4.45562 9.59858 2.33216 11.7638 0.187825 13.9551C0.114782 13.7307 0.0573909 13.5533 0 13.3759C0 9.45771 0 5.53948 0 1.62124Z" fill="#8D8D95"/>
              <Path d="M1.04346 0.139564C1.36693 0.0873908 1.6278 0.00391302 1.89389 0.00391302C7.74254 -0.00130434 13.586 -0.00130434 19.4346 0.00391302C19.7007 0.00391302 19.972 0.0873908 20.2903 0.144782C20.1964 0.249129 20.1494 0.301302 20.1025 0.348259C17.4312 3.00911 14.7547 5.66996 12.0834 8.3256C11.5095 8.8995 10.8312 9.12385 10.0538 8.84211C9.77731 8.74298 9.50601 8.56038 9.2921 8.35168C6.58429 5.67518 3.89213 2.98824 1.19476 0.30652C1.15824 0.269998 1.12693 0.233477 1.04346 0.139564Z" fill="#8D8D95"/>
              <Path d="M1.16858 14.8526C3.27639 12.7031 5.39464 10.5431 7.52854 8.36743C7.83636 8.67526 8.11288 8.95699 8.39462 9.23351C8.82244 9.66655 9.32331 9.98481 9.9233 10.1205C11.0763 10.3813 12.0781 10.0839 12.9233 9.2596C13.2102 8.97786 13.492 8.69091 13.7998 8.38308C15.9285 10.5587 18.0467 12.7187 20.1702 14.8839C19.9563 14.9152 19.6693 14.9935 19.3824 14.9935C17.9059 15.0039 16.4241 14.9987 14.9476 14.9987C10.6381 14.9987 6.32333 14.9987 2.01379 14.9987C1.6851 14.9987 1.38249 14.9622 1.16858 14.8526Z" fill="#8D8D95"/>
              <Path d="M21.125 1.05261C21.2868 1.36565 21.3337 1.65261 21.3337 1.95521C21.3337 3.71868 21.3337 5.48215 21.3337 7.24561C21.3337 9.17082 21.3337 11.0908 21.3337 13.016C21.3337 13.3238 21.292 13.6212 21.1302 13.9395C18.9963 11.7638 16.8781 9.60386 14.812 7.49605C16.8729 5.39345 18.9911 3.23347 21.125 1.05261Z" fill="#8D8D95"/>
            </Svg>

            </View>
            <TextInput
              style={styles.input}
              placeholder="Medium of Art"
              placeholderTextColor="#979797"
              value={formData.mediumOfArt}
              onChangeText={(text) => setFormData({...formData, mediumOfArt: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="14" height="23" viewBox="0 0 14 23" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M13.2312 4.8078C13.6522 4.94361 13.7405 5.05905 13.7405 5.48686C13.7405 5.86714 13.7405 6.24742 13.7405 6.6277C13.7405 7.08946 13.6794 7.17774 13.2312 7.34751C13.2312 7.43578 13.2312 7.53764 13.2312 7.6395C13.2312 11.9244 13.2312 16.2093 13.2312 20.501C13.2312 21.7709 12.4299 22.742 11.2144 22.966C11.0514 22.9932 10.8748 23 10.7119 23C8.15858 23 5.61208 23 3.05878 23C1.54446 23 0.519073 21.9746 0.519073 20.4671C0.519073 17.194 0.519073 13.9277 0.519073 10.6546C0.519073 10.5527 0.519073 10.4508 0.519073 10.3286C0.0573076 10.2539 -0.0173897 9.94154 0.00298232 9.54089C0.0233543 9.16741 0.00298222 8.79392 0.00977289 8.42043C0.00977289 8.04694 0.125214 7.91113 0.519073 7.80927C0.519073 7.73457 0.519073 7.65309 0.519073 7.5716C0.519073 7.4969 0.519073 7.4222 0.519073 7.3543C0.0505169 7.16416 0.00977289 7.10304 0.00977289 6.58695C0.00977289 6.21346 0.00977289 5.83998 0.00977289 5.46649C0.00977289 5.05226 0.104842 4.92324 0.519073 4.8078C0.519073 4.02008 0.512283 3.22557 0.519073 2.42427C0.532655 1.20195 1.35433 0.237673 2.55627 0.0271627C2.71246 -2.63091e-08 2.87544 0 3.03841 0C5.5985 0 8.15858 0 10.7119 0C12.2058 0 13.2312 1.02539 13.238 2.51934C13.2312 3.29348 13.2312 4.05403 13.2312 4.8078ZM4.0638 0.998229C3.71069 0.998229 3.40511 0.998229 3.09274 0.998229C2.08772 1.00502 1.5173 1.57544 1.5173 2.57366C1.5173 3.77561 1.5173 4.97756 1.5173 6.1863C1.5173 10.9398 1.5173 15.6932 1.5173 20.4467C1.5173 21.4042 2.08093 22.0086 3.00446 22.0086C5.5917 22.0154 8.17216 22.0154 10.7594 22.0086C11.2076 22.0086 11.5879 21.8592 11.8867 21.5196C12.1787 21.1937 12.2398 20.8066 12.2398 20.3856C12.2398 14.4641 12.2398 8.54266 12.2398 2.6212C12.2398 2.51255 12.2398 2.4039 12.2262 2.28846C12.1787 1.77916 11.9206 1.39209 11.4656 1.1612C10.902 0.869206 10.2908 1.03897 9.70006 0.991438C9.69327 1.10688 9.68648 1.1612 9.68648 1.22232C9.6729 2.07795 9.65252 2.09832 8.79011 2.09832C7.39123 2.09832 5.99235 2.09832 4.59348 2.09832C4.23357 2.09832 4.07059 1.94213 4.0638 1.6026C4.05701 1.41246 4.0638 1.22911 4.0638 0.998229Z" fill="#8D8D95"/>
            </Svg>

            </View>
            <TextInput
              style={styles.input}
              placeholder="Previous Exhibitions/Shows (if any)"
              placeholderTextColor="#979797"
              value={formData.previousExhibitions}
              onChangeText={(text) => setFormData({...formData, previousExhibitions: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                <Path d="M4.68975 1.43939C4.68975 1.19949 4.68975 0.959596 4.68975 0.767677C4.68975 0.335859 4.97763 0.0479798 5.40945 0C5.84127 0 6.12915 0.335859 6.12915 0.767677C6.12915 1.00758 6.12915 1.19949 6.12915 1.43939C8.04834 1.43939 9.96753 1.43939 11.8867 1.43939C11.8867 1.24747 11.8867 1.05556 11.8867 0.863636C11.8867 0.383838 12.1746 0.0479798 12.6064 0.0479798C12.9903 -4.64721e-08 13.2781 0.335858 13.2781 0.815656C13.2781 1.00758 13.2781 1.19949 13.2781 1.39141C13.566 1.39141 13.8539 1.39141 14.1898 1.39141C14.7175 1.39141 15.2453 1.48737 15.7251 1.72727C17.0206 2.39899 17.7403 3.45455 17.8362 4.89394C18.0281 8.01263 18.0281 11.0833 17.8842 14.202C17.8362 14.8258 17.8362 15.4495 17.6923 16.0732C17.3564 17.6086 16.013 18.7121 14.4297 18.8081C11.6468 19 8.864 19.048 6.12915 18.952C5.12157 18.904 4.114 18.904 3.1544 18.7601C1.57107 18.5682 0.323592 17.1288 0.179652 15.4975C-0.0122669 12.2828 -0.0602466 9.11616 0.0836928 5.90152C0.131673 5.27778 0.131673 4.70202 0.275612 4.07828C0.611471 2.59091 2.09884 1.43939 3.68218 1.43939C4.01804 1.43939 4.30592 1.43939 4.68975 1.43939ZM1.52309 7.19697C1.52309 7.24495 1.52309 7.29293 1.52309 7.29293C1.42713 10.0278 1.47511 12.7146 1.66703 15.4495C1.71501 16.5051 2.57864 17.3207 3.6342 17.4167C4.30591 17.4646 4.97763 17.4646 5.64935 17.5126C8.57612 17.6566 11.5509 17.6086 14.4776 17.4167C15.5332 17.3687 16.3488 16.5051 16.4448 15.4495C16.6367 12.7146 16.6367 10.0278 16.5887 7.29293C16.5887 7.24495 16.5887 7.19697 16.5408 7.14899C11.4549 7.19697 6.51299 7.19697 1.52309 7.19697ZM16.4448 5.7096C16.3968 5.2298 16.3968 4.79798 16.3009 4.36616C15.965 3.16667 14.6216 2.49495 13.3261 2.87879C13.3261 3.07071 13.3261 3.26263 13.3261 3.50253C13.3261 3.98232 13.0382 4.31818 12.6064 4.31818C12.1746 4.31818 11.8867 3.98232 11.8867 3.5505C11.8867 3.35859 11.8867 3.11869 11.8867 2.92677C9.96753 2.92677 8.04834 2.92677 6.12915 2.92677C6.12915 3.16667 6.12915 3.40657 6.12915 3.59848C6.12915 4.0303 5.84127 4.31818 5.40945 4.36616C4.97763 4.36616 4.68975 4.0303 4.68975 3.59848C4.68975 3.35859 4.68975 3.16667 4.68975 2.92677C4.3539 2.92677 4.01804 2.92677 3.73016 2.92677C3.29834 2.92677 2.9145 3.07071 2.57864 3.31061C1.66703 3.93434 1.57107 4.79798 1.61905 5.80556C6.51299 5.7096 11.4549 5.7096 16.4448 5.7096Z" fill="#8D8D95"/>
                <Path d="M5.40945 9.35608C5.98521 9.35608 6.51298 9.83588 6.465 10.4596C6.465 11.0354 5.98521 11.5152 5.40945 11.5152C4.83369 11.5152 4.30591 11.0354 4.35389 10.4116C4.30591 9.83588 4.78571 9.35608 5.40945 9.35608Z" fill="#8D8D95"/>
                <Path d="M10.0635 10.4116C10.0635 10.9874 9.58371 11.5152 9.00795 11.5152C8.43219 11.5152 7.95239 11.0354 7.95239 10.4596C7.95239 9.88386 8.43219 9.35608 9.00795 9.35608C9.58371 9.35608 10.0635 9.83588 10.0635 10.4116Z" fill="#8D8D95"/>
                <Path d="M12.5583 9.35608C13.1341 9.35608 13.6619 9.83588 13.6139 10.4596C13.6139 11.0354 13.1341 11.5152 12.5583 11.5152C11.9826 11.5152 11.4548 11.0354 11.5028 10.4116C11.5028 9.7879 11.9826 9.35608 12.5583 9.35608Z" fill="#8D8D95"/>
                <Path d="M6.465 14.01C6.465 14.5858 5.9852 15.1136 5.36146 15.0656C4.78571 15.0656 4.30591 14.5858 4.30591 13.962C4.30591 13.3863 4.78571 12.8585 5.40944 12.9065C5.9852 12.9545 6.465 13.4343 6.465 14.01Z" fill="#8D8D95"/>
                <Path d="M10.0634 14.0102C10.0634 14.5859 9.58359 15.1137 8.95985 15.1137C8.3841 15.1137 7.9043 14.6339 7.9043 14.0581C7.9043 13.4824 8.3841 12.9546 9.00783 12.9546C9.58359 12.9066 10.0634 13.3864 10.0634 14.0102Z" fill="#8D8D95"/>
                <Path d="M13.662 14.01C13.662 14.5858 13.1822 15.0656 12.6065 15.0656C12.0307 15.0656 11.5029 14.5858 11.5029 13.962C11.5029 13.3863 11.9827 12.8585 12.6065 12.9065C13.1822 12.9545 13.662 13.4343 13.662 14.01Z" fill="#8D8D95"/>
            </Svg>

            </View>
            <TextInput
              style={styles.input}
              placeholder="Artist Shop Name"
              placeholderTextColor="#979797"
              value={formData.artistShopName}
              onChangeText={(text) => setFormData({...formData, artistShopName: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M12.6731 10.4051C13.7478 9.33035 14.8075 8.27065 15.8722 7.20095C15.8172 7.20095 15.7622 7.20095 15.7022 7.20095C15.2573 7.20095 14.8175 7.20595 14.3726 7.20095C14.0427 7.19595 13.7878 6.93602 13.7828 6.62111C13.7728 6.3012 14.0177 6.01628 14.3426 6.01128C15.3673 6.00128 16.387 6.00128 17.4117 6.01128C17.7267 6.01628 17.9716 6.27621 17.9716 6.60112C17.9766 7.60084 17.9766 8.59556 17.9716 9.59528C17.9716 9.94018 17.6967 10.2051 17.3668 10.2001C17.0419 10.1951 16.7819 9.93518 16.7769 9.59528C16.7719 9.1604 16.7769 8.72052 16.7769 8.28565C16.7769 8.22566 16.7769 8.16568 16.7769 8.12569C15.7172 9.18539 14.6525 10.2501 13.5828 11.3148C15.0674 13.3692 14.3476 15.9935 12.6331 17.2181C10.9536 18.4178 8.61421 18.2229 7.16462 16.7283C5.71002 15.2337 5.58506 12.8844 6.8547 11.2348C8.13934 9.55529 10.6886 8.97045 12.6731 10.4051ZM13.1829 13.7891C13.1779 12.1346 11.8383 10.7949 10.1988 10.7949C8.52923 10.7949 7.19461 12.1346 7.19461 13.8091C7.19961 15.4536 8.55423 16.7933 10.2138 16.7833C11.8483 16.7783 13.1879 15.4236 13.1829 13.7891Z" fill="#8D8D95"/>
              <Path d="M1.39627 9.80532C1.09636 9.5104 0.836431 9.25047 0.576504 8.99055C0.291583 8.70563 0.271589 8.35073 0.521519 8.0958C0.771449 7.84087 1.13135 7.86086 1.41627 8.14079C1.6762 8.40071 1.93612 8.66564 2.23104 8.96556C2.97083 8.21077 3.70063 7.46597 4.42543 6.72118C2.95084 4.67676 3.58066 2.08248 5.30518 0.817837C7.0097 -0.431813 9.37904 -0.231869 10.8436 1.2977C12.3032 2.82727 12.3932 5.19661 11.0586 6.85115C9.74394 8.48069 7.25463 8.98555 5.31018 7.59094C4.57538 8.32573 3.84059 9.06053 3.0858 9.82032C3.34073 10.0702 3.61565 10.3452 3.89058 10.6201C4.06053 10.785 4.12551 10.985 4.06553 11.2149C3.94556 11.6548 3.41571 11.8048 3.0808 11.4948C2.83087 11.2599 2.59594 11.01 2.35101 10.7701C2.30602 10.7251 2.26103 10.6851 2.20605 10.6351C1.82115 11.02 1.45126 11.4049 1.06137 11.7748C0.956397 11.8747 0.806439 11.9597 0.66148 11.9847C0.41155 12.0347 0.176615 11.8897 0.0616476 11.6648C-0.0533202 11.4349 -0.01833 11.1699 0.176615 10.975C0.51652 10.6301 0.861424 10.2852 1.20633 9.94528C1.26131 9.90029 1.32129 9.8603 1.39627 9.80532ZM7.78448 7.20105C9.44402 7.20105 10.7836 5.86642 10.7886 4.20689C10.7936 2.55235 9.44902 1.21273 7.78948 1.21273C6.15494 1.20773 4.80532 2.55235 4.80532 4.18689C4.80032 5.85143 6.13495 7.20105 7.78448 7.20105Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="Artistry Achievement"
              placeholderTextColor="#979797"
              value={formData.artistryAchievement}
              onChangeText={(text) => setFormData({...formData, artistryAchievement: text})}
            />
          </View>
        </View>

        <TouchableOpacity 
          style={styles.nextButton}
          onPress={() => setStep(3)}
        >
          <Text style={styles.buttonText}>Next</Text>
        </TouchableOpacity>
      </ScrollView>

      <View style={styles.ellipse1} />
      <View style={styles.ellipse2} />
    </KeyboardAvoidingView>
  );

  const renderStep3 = () => (
    <KeyboardAvoidingView 
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      style={styles.stepContainer}
    >
      <ScrollView 
        contentContainerStyle={styles.scrollContent}
        keyboardShouldPersistTaps="handled"
      >
        <View style={styles.headerImageContainer}>
          <Image 
            source={require('../../../assets/mail-icon.png')} 
            style={styles.mailImage}
          />
        </View>

        <View style={styles.formSection}>
          <Text style={styles.sectionTitle}>Fill in your address details</Text>
          <Text style={styles.stepIndicator}>3/3</Text>
          
          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="15" height="18" viewBox="0 0 15 18" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M7.8027 0C8.03607 0.0484342 8.27383 0.0880621 8.5028 0.140899C10.0967 0.515164 11.4573 2.03424 11.673 3.66339C11.8139 4.73334 11.6598 5.74606 11.0522 6.6531C10.2464 7.85514 9.13684 8.55524 7.6662 8.65651C5.73324 8.7886 4.14812 7.6526 3.42601 6.10711C2.74793 4.65849 3.02093 2.72993 4.08648 1.52788C4.73814 0.796962 5.52189 0.286202 6.49498 0.0880621C6.6623 0.0528373 6.82521 0.0264186 6.99253 0C7.26112 0 7.53411 0 7.8027 0Z" fill="#8D8D95"/>
              <Path d="M7.49889 17.9999C6.07669 17.9999 4.65008 17.9999 3.22788 17.9999C2.49696 17.9999 1.81008 17.8546 1.20245 17.4231C0.515562 16.9299 0.110476 16.2562 0.0400261 15.4241C-0.0876641 13.9358 0.0840572 12.474 0.643252 11.0826C0.977888 10.2548 1.47544 9.53711 2.29442 9.1012C2.80518 8.82821 3.35557 8.69611 3.93237 8.70492C4.1129 8.70932 4.30664 8.79738 4.46955 8.88545C4.74255 9.03515 4.99352 9.22008 5.25771 9.37859C6.75917 10.2988 8.26063 10.2988 9.75769 9.36979C9.96463 9.2421 10.1804 9.11441 10.3741 8.96911C10.7352 8.70052 11.1271 8.66089 11.5586 8.72693C12.7254 8.89866 13.5532 9.53711 14.108 10.5542C14.6055 11.4657 14.8301 12.452 14.9269 13.4735C14.9798 13.9931 15.0018 14.5126 14.9974 15.0322C14.9798 16.6349 13.901 17.7973 12.3071 17.9647C12.1133 17.9867 11.9196 17.9955 11.7303 17.9955C10.3257 17.9999 8.91229 17.9999 7.49889 17.9999Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="Address Line 1"
              placeholderTextColor="#979797"
              value={formData.addressLine1}
              onChangeText={(text) => setFormData({...formData, addressLine1: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="22" height="15" viewBox="0 0 22 15" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M0 1.62124C0.0573909 1.44385 0.114782 1.27168 0.187825 1.04211C2.33216 3.22819 4.4504 5.38817 6.51126 7.49598C4.45562 9.59858 2.33216 11.7638 0.187825 13.9551C0.114782 13.7307 0.0573909 13.5533 0 13.3759C0 9.45771 0 5.53948 0 1.62124Z" fill="#8D8D95"/>
              <Path d="M1.04346 0.139564C1.36693 0.0873908 1.6278 0.00391302 1.89389 0.00391302C7.74254 -0.00130434 13.586 -0.00130434 19.4346 0.00391302C19.7007 0.00391302 19.972 0.0873908 20.2903 0.144782C20.1964 0.249129 20.1494 0.301302 20.1025 0.348259C17.4312 3.00911 14.7547 5.66996 12.0834 8.3256C11.5095 8.8995 10.8312 9.12385 10.0538 8.84211C9.77731 8.74298 9.50601 8.56038 9.2921 8.35168C6.58429 5.67518 3.89213 2.98824 1.19476 0.30652C1.15824 0.269998 1.12693 0.233477 1.04346 0.139564Z" fill="#8D8D95"/>
              <Path d="M1.16858 14.8526C3.27639 12.7031 5.39464 10.5431 7.52854 8.36743C7.83636 8.67526 8.11288 8.95699 8.39462 9.23351C8.82244 9.66655 9.32331 9.98481 9.9233 10.1205C11.0763 10.3813 12.0781 10.0839 12.9233 9.2596C13.2102 8.97786 13.492 8.69091 13.7998 8.38308C15.9285 10.5587 18.0467 12.7187 20.1702 14.8839C19.9563 14.9152 19.6693 14.9935 19.3824 14.9935C17.9059 15.0039 16.4241 14.9987 14.9476 14.9987C10.6381 14.9987 6.32333 14.9987 2.01379 14.9987C1.6851 14.9987 1.38249 14.9622 1.16858 14.8526Z" fill="#8D8D95"/>
              <Path d="M21.125 1.05261C21.2868 1.36565 21.3337 1.65261 21.3337 1.95521C21.3337 3.71868 21.3337 5.48215 21.3337 7.24561C21.3337 9.17082 21.3337 11.0908 21.3337 13.016C21.3337 13.3238 21.292 13.6212 21.1302 13.9395C18.9963 11.7638 16.8781 9.60386 14.812 7.49605C16.8729 5.39345 18.9911 3.23347 21.125 1.05261Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="Address Line 2"
              placeholderTextColor="#979797"
              value={formData.addressLine2}
              onChangeText={(text) => setFormData({...formData, addressLine2: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="14" height="23" viewBox="0 0 14 23" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M13.2312 4.8078C13.6522 4.94361 13.7405 5.05905 13.7405 5.48686C13.7405 5.86714 13.7405 6.24742 13.7405 6.6277C13.7405 7.08946 13.6794 7.17774 13.2312 7.34751C13.2312 7.43578 13.2312 7.53764 13.2312 7.6395C13.2312 11.9244 13.2312 16.2093 13.2312 20.501C13.2312 21.7709 12.4299 22.742 11.2144 22.966C11.0514 22.9932 10.8748 23 10.7119 23C8.15858 23 5.61208 23 3.05878 23C1.54446 23 0.519073 21.9746 0.519073 20.4671C0.519073 17.194 0.519073 13.9277 0.519073 10.6546C0.519073 10.5527 0.519073 10.4508 0.519073 10.3286C0.0573076 10.2539 -0.0173897 9.94154 0.00298232 9.54089C0.0233543 9.16741 0.00298222 8.79392 0.00977289 8.42043C0.00977289 8.04694 0.125214 7.91113 0.519073 7.80927C0.519073 7.73457 0.519073 7.65309 0.519073 7.5716C0.519073 7.4969 0.519073 7.4222 0.519073 7.3543C0.0505169 7.16416 0.00977289 7.10304 0.00977289 6.58695C0.00977289 6.21346 0.00977289 5.83998 0.00977289 5.46649C0.00977289 5.05226 0.104842 4.92324 0.519073 4.8078C0.519073 4.02008 0.512283 3.22557 0.519073 2.42427C0.532655 1.20195 1.35433 0.237673 2.55627 0.0271627C2.71246 -2.63091e-08 2.87544 0 3.03841 0C5.5985 0 8.15858 0 10.7119 0C12.2058 0 13.2312 1.02539 13.238 2.51934C13.2312 3.29348 13.2312 4.05403 13.2312 4.8078ZM4.0638 0.998229C3.71069 0.998229 3.40511 0.998229 3.09274 0.998229C2.08772 1.00502 1.5173 1.57544 1.5173 2.57366C1.5173 3.77561 1.5173 4.97756 1.5173 6.1863C1.5173 10.9398 1.5173 15.6932 1.5173 20.4467C1.5173 21.4042 2.08093 22.0086 3.00446 22.0086C5.5917 22.0154 8.17216 22.0154 10.7594 22.0086C11.2076 22.0086 11.5879 21.8592 11.8867 21.5196C12.1787 21.1937 12.2398 20.8066 12.2398 20.3856C12.2398 14.4641 12.2398 8.54266 12.2398 2.6212C12.2398 2.51255 12.2398 2.4039 12.2262 2.28846C12.1787 1.77916 11.9206 1.39209 11.4656 1.1612C10.902 0.869206 10.2908 1.03897 9.70006 0.991438C9.69327 1.10688 9.68648 1.1612 9.68648 1.22232C9.6729 2.07795 9.65252 2.09832 8.79011 2.09832C7.39123 2.09832 5.99235 2.09832 4.59348 2.09832C4.23357 2.09832 4.07059 1.94213 4.0638 1.6026C4.05701 1.41246 4.0638 1.22911 4.0638 0.998229Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="City"
              placeholderTextColor="#979797"
              value={formData.city}
              onChangeText={(text) => setFormData({...formData, city: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                <Path d="M4.68975 1.43939C4.68975 1.19949 4.68975 0.959596 4.68975 0.767677C4.68975 0.335859 4.97763 0.0479798 5.40945 0C5.84127 0 6.12915 0.335859 6.12915 0.767677C6.12915 1.00758 6.12915 1.19949 6.12915 1.43939C8.04834 1.43939 9.96753 1.43939 11.8867 1.43939C11.8867 1.24747 11.8867 1.05556 11.8867 0.863636C11.8867 0.383838 12.1746 0.0479798 12.6064 0.0479798C12.9903 -4.64721e-08 13.2781 0.335858 13.2781 0.815656C13.2781 1.00758 13.2781 1.19949 13.2781 1.39141C13.566 1.39141 13.8539 1.39141 14.1898 1.39141C14.7175 1.39141 15.2453 1.48737 15.7251 1.72727C17.0206 2.39899 17.7403 3.45455 17.8362 4.89394C18.0281 8.01263 18.0281 11.0833 17.8842 14.202C17.8362 14.8258 17.8362 15.4495 17.6923 16.0732C17.3564 17.6086 16.013 18.7121 14.4297 18.8081C11.6468 19 8.864 19.048 6.12915 18.952C5.12157 18.904 4.114 18.904 3.1544 18.7601C1.57107 18.5682 0.323592 17.1288 0.179652 15.4975C-0.0122669 12.2828 -0.0602466 9.11616 0.0836928 5.90152C0.131673 5.27778 0.131673 4.70202 0.275612 4.07828C0.611471 2.59091 2.09884 1.43939 3.68218 1.43939C4.01804 1.43939 4.30592 1.43939 4.68975 1.43939ZM1.52309 7.19697C1.52309 7.24495 1.52309 7.29293 1.52309 7.29293C1.42713 10.0278 1.47511 12.7146 1.66703 15.4495C1.71501 16.5051 2.57864 17.3207 3.6342 17.4167C4.30591 17.4646 4.97763 17.4646 5.64935 17.5126C8.57612 17.6566 11.5509 17.6086 14.4776 17.4167C15.5332 17.3687 16.3488 16.5051 16.4448 15.4495C16.6367 12.7146 16.6367 10.0278 16.5887 7.29293C16.5887 7.24495 16.5887 7.19697 16.5408 7.14899C11.4549 7.19697 6.51299 7.19697 1.52309 7.19697ZM16.4448 5.7096C16.3968 5.2298 16.3968 4.79798 16.3009 4.36616C15.965 3.16667 14.6216 2.49495 13.3261 2.87879C13.3261 3.07071 13.3261 3.26263 13.3261 3.50253C13.3261 3.98232 13.0382 4.31818 12.6064 4.31818C12.1746 4.31818 11.8867 3.98232 11.8867 3.5505C11.8867 3.35859 11.8867 3.11869 11.8867 2.92677C9.96753 2.92677 8.04834 2.92677 6.12915 2.92677C6.12915 3.16667 6.12915 3.40657 6.12915 3.59848C6.12915 4.0303 5.84127 4.31818 5.40945 4.36616C4.97763 4.36616 4.68975 4.0303 4.68975 3.59848C4.68975 3.35859 4.68975 3.16667 4.68975 2.92677C4.3539 2.92677 4.01804 2.92677 3.73016 2.92677C3.29834 2.92677 2.9145 3.07071 2.57864 3.31061C1.66703 3.93434 1.57107 4.79798 1.61905 5.80556C6.51299 5.7096 11.4549 5.7096 16.4448 5.7096Z" fill="#8D8D95"/>
                <Path d="M5.40945 9.35608C5.98521 9.35608 6.51298 9.83588 6.465 10.4596C6.465 11.0354 5.98521 11.5152 5.40945 11.5152C4.83369 11.5152 4.30591 11.0354 4.35389 10.4116C4.30591 9.83588 4.78571 9.35608 5.40945 9.35608Z" fill="#8D8D95"/>
                <Path d="M10.0635 10.4116C10.0635 10.9874 9.58371 11.5152 9.00795 11.5152C8.43219 11.5152 7.95239 11.0354 7.95239 10.4596C7.95239 9.88386 8.43219 9.35608 9.00795 9.35608C9.58371 9.35608 10.0635 9.83588 10.0635 10.4116Z" fill="#8D8D95"/>
                <Path d="M12.5583 9.35608C13.1341 9.35608 13.6619 9.83588 13.6139 10.4596C13.6139 11.0354 13.1341 11.5152 12.5583 11.5152C11.9826 11.5152 11.4548 11.0354 11.5028 10.4116C11.5028 9.7879 11.9826 9.35608 12.5583 9.35608Z" fill="#8D8D95"/>
                <Path d="M6.465 14.01C6.465 14.5858 5.9852 15.1136 5.36146 15.0656C4.78571 15.0656 4.30591 14.5858 4.30591 13.962C4.30591 13.3863 4.78571 12.8585 5.40944 12.9065C5.9852 12.9545 6.465 13.4343 6.465 14.01Z" fill="#8D8D95"/>
                <Path d="M10.0634 14.0102C10.0634 14.5859 9.58359 15.1137 8.95985 15.1137C8.3841 15.1137 7.9043 14.6339 7.9043 14.0581C7.9043 13.4824 8.3841 12.9546 9.00783 12.9546C9.58359 12.9066 10.0634 13.3864 10.0634 14.0102Z" fill="#8D8D95"/>
                <Path d="M13.662 14.01C13.662 14.5858 13.1822 15.0656 12.6065 15.0656C12.0307 15.0656 11.5029 14.5858 11.5029 13.962C11.5029 13.3863 11.9827 12.8585 12.6065 12.9065C13.1822 12.9545 13.662 13.4343 13.662 14.01Z" fill="#8D8D95"/>
            </Svg>

            </View>
            <TextInput
              style={styles.input}
              placeholder="District"
              placeholderTextColor="#979797"
              value={formData.district}
              onChangeText={(text) => setFormData({...formData, district: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M12.6731 10.4051C13.7478 9.33035 14.8075 8.27065 15.8722 7.20095C15.8172 7.20095 15.7622 7.20095 15.7022 7.20095C15.2573 7.20095 14.8175 7.20595 14.3726 7.20095C14.0427 7.19595 13.7878 6.93602 13.7828 6.62111C13.7728 6.3012 14.0177 6.01628 14.3426 6.01128C15.3673 6.00128 16.387 6.00128 17.4117 6.01128C17.7267 6.01628 17.9716 6.27621 17.9716 6.60112C17.9766 7.60084 17.9766 8.59556 17.9716 9.59528C17.9716 9.94018 17.6967 10.2051 17.3668 10.2001C17.0419 10.1951 16.7819 9.93518 16.7769 9.59528C16.7719 9.1604 16.7769 8.72052 16.7769 8.28565C16.7769 8.22566 16.7769 8.16568 16.7769 8.12569C15.7172 9.18539 14.6525 10.2501 13.5828 11.3148C15.0674 13.3692 14.3476 15.9935 12.6331 17.2181C10.9536 18.4178 8.61421 18.2229 7.16462 16.7283C5.71002 15.2337 5.58506 12.8844 6.8547 11.2348C8.13934 9.55529 10.6886 8.97045 12.6731 10.4051ZM13.1829 13.7891C13.1779 12.1346 11.8383 10.7949 10.1988 10.7949C8.52923 10.7949 7.19461 12.1346 7.19461 13.8091C7.19961 15.4536 8.55423 16.7933 10.2138 16.7833C11.8483 16.7783 13.1879 15.4236 13.1829 13.7891Z" fill="#8D8D95"/>
              <Path d="M1.39627 9.80532C1.09636 9.5104 0.836431 9.25047 0.576504 8.99055C0.291583 8.70563 0.271589 8.35073 0.521519 8.0958C0.771449 7.84087 1.13135 7.86086 1.41627 8.14079C1.6762 8.40071 1.93612 8.66564 2.23104 8.96556C2.97083 8.21077 3.70063 7.46597 4.42543 6.72118C2.95084 4.67676 3.58066 2.08248 5.30518 0.817837C7.0097 -0.431813 9.37904 -0.231869 10.8436 1.2977C12.3032 2.82727 12.3932 5.19661 11.0586 6.85115C9.74394 8.48069 7.25463 8.98555 5.31018 7.59094C4.57538 8.32573 3.84059 9.06053 3.0858 9.82032C3.34073 10.0702 3.61565 10.3452 3.89058 10.6201C4.06053 10.785 4.12551 10.985 4.06553 11.2149C3.94556 11.6548 3.41571 11.8048 3.0808 11.4948C2.83087 11.2599 2.59594 11.01 2.35101 10.7701C2.30602 10.7251 2.26103 10.6851 2.20605 10.6351C1.82115 11.02 1.45126 11.4049 1.06137 11.7748C0.956397 11.8747 0.806439 11.9597 0.66148 11.9847C0.41155 12.0347 0.176615 11.8897 0.0616476 11.6648C-0.0533202 11.4349 -0.01833 11.1699 0.176615 10.975C0.51652 10.6301 0.861424 10.2852 1.20633 9.94528C1.26131 9.90029 1.32129 9.8603 1.39627 9.80532ZM7.78448 7.20105C9.44402 7.20105 10.7836 5.86642 10.7886 4.20689C10.7936 2.55235 9.44902 1.21273 7.78948 1.21273C6.15494 1.20773 4.80532 2.55235 4.80532 4.18689C4.80032 5.85143 6.13495 7.20105 7.78448 7.20105Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="State"
              placeholderTextColor="#979797"
              value={formData.state}
              onChangeText={(text) => setFormData({...formData, state: text})}
            />
          </View>

          <View style={styles.inputGroup}>
            <View style={styles.inputIcon}>
            <Svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
              <Path d="M12.6731 10.4051C13.7478 9.33035 14.8075 8.27065 15.8722 7.20095C15.8172 7.20095 15.7622 7.20095 15.7022 7.20095C15.2573 7.20095 14.8175 7.20595 14.3726 7.20095C14.0427 7.19595 13.7878 6.93602 13.7828 6.62111C13.7728 6.3012 14.0177 6.01628 14.3426 6.01128C15.3673 6.00128 16.387 6.00128 17.4117 6.01128C17.7267 6.01628 17.9716 6.27621 17.9716 6.60112C17.9766 7.60084 17.9766 8.59556 17.9716 9.59528C17.9716 9.94018 17.6967 10.2051 17.3668 10.2001C17.0419 10.1951 16.7819 9.93518 16.7769 9.59528C16.7719 9.1604 16.7769 8.72052 16.7769 8.28565C16.7769 8.22566 16.7769 8.16568 16.7769 8.12569C15.7172 9.18539 14.6525 10.2501 13.5828 11.3148C15.0674 13.3692 14.3476 15.9935 12.6331 17.2181C10.9536 18.4178 8.61421 18.2229 7.16462 16.7283C5.71002 15.2337 5.58506 12.8844 6.8547 11.2348C8.13934 9.55529 10.6886 8.97045 12.6731 10.4051ZM13.1829 13.7891C13.1779 12.1346 11.8383 10.7949 10.1988 10.7949C8.52923 10.7949 7.19461 12.1346 7.19461 13.8091C7.19961 15.4536 8.55423 16.7933 10.2138 16.7833C11.8483 16.7783 13.1879 15.4236 13.1829 13.7891Z" fill="#8D8D95"/>
              <Path d="M1.39627 9.80532C1.09636 9.5104 0.836431 9.25047 0.576504 8.99055C0.291583 8.70563 0.271589 8.35073 0.521519 8.0958C0.771449 7.84087 1.13135 7.86086 1.41627 8.14079C1.6762 8.40071 1.93612 8.66564 2.23104 8.96556C2.97083 8.21077 3.70063 7.46597 4.42543 6.72118C2.95084 4.67676 3.58066 2.08248 5.30518 0.817837C7.0097 -0.431813 9.37904 -0.231869 10.8436 1.2977C12.3032 2.82727 12.3932 5.19661 11.0586 6.85115C9.74394 8.48069 7.25463 8.98555 5.31018 7.59094C4.57538 8.32573 3.84059 9.06053 3.0858 9.82032C3.34073 10.0702 3.61565 10.3452 3.89058 10.6201C4.06053 10.785 4.12551 10.985 4.06553 11.2149C3.94556 11.6548 3.41571 11.8048 3.0808 11.4948C2.83087 11.2599 2.59594 11.01 2.35101 10.7701C2.30602 10.7251 2.26103 10.6851 2.20605 10.6351C1.82115 11.02 1.45126 11.4049 1.06137 11.7748C0.956397 11.8747 0.806439 11.9597 0.66148 11.9847C0.41155 12.0347 0.176615 11.8897 0.0616476 11.6648C-0.0533202 11.4349 -0.01833 11.1699 0.176615 10.975C0.51652 10.6301 0.861424 10.2852 1.20633 9.94528C1.26131 9.90029 1.32129 9.8603 1.39627 9.80532ZM7.78448 7.20105C9.44402 7.20105 10.7836 5.86642 10.7886 4.20689C10.7936 2.55235 9.44902 1.21273 7.78948 1.21273C6.15494 1.20773 4.80532 2.55235 4.80532 4.18689C4.80032 5.85143 6.13495 7.20105 7.78448 7.20105Z" fill="#8D8D95"/>
            </Svg>
            </View>
            <TextInput
              style={styles.input}
              placeholder="Pincode"
              placeholderTextColor="#979797"
              value={formData.pincode}
              onChangeText={(text) => setFormData({...formData, pincode: text})}
            />
          </View>
        </View>

        <TouchableOpacity 
          style={styles.registerButton}
          onPress={handleRegistration}
        >
          <Text style={styles.buttonText}>Register</Text>
        </TouchableOpacity>

        <Text style={styles.termsText}>
          By Signing up you agree to{' '}
          <Text style={styles.termsLink}>Terms and Conditions</Text> and{' '}
          <Text style={styles.termsLink}>Privacy Policy</Text>
        </Text>
      </ScrollView>

      <View style={styles.ellipse1} />
      <View style={styles.ellipse2} />
    </KeyboardAvoidingView>
  );

  const handleRegistration = async () => {
    try {
      const token = await AsyncStorage.getItem("@token");
      if (!token) {
        Alert.alert('Error', 'No authentication token found. Please login again.');
        return;
      }

      // First get the profile data
      const profileResponse = await getMethod({
        url: 'customers/secure/profile',
        token: token
      });

      console.log('STEP 1 - Profile Response:', profileResponse);

      if (!profileResponse.success) {
        throw new Error('Failed to fetch profile data');
      }

      // Get the customer data from the nested structure
      const customerData = profileResponse.data.customer;  // <-- This is the fix

      // Log each piece of data we're trying to use
      console.log('STEP 3 - Profile Details:', {
        firstName: customerData.firstName,
        lastName: customerData.lastName,
        email: customerData.email,
        phoneNumber: customerData.phoneNumber
      });

      const registrationData = {
        hubType: "Student",
        // Use customer data for these fields
        first_name: customerData.firstName || "",
        last_name: customerData.lastName || "",
        email: customerData.email || "",
        phone_number: customerData.phoneNumber || "",
        // Form data for the rest
        portfolioWebsite: formData.portfolioWebsite,
        mediumOfArt: formData.mediumOfArt,
        previousExhibitions: formData.previousExhibitions,
        artistShopName: formData.artistShopName,
        artistryAchievement: formData.artistryAchievement,
        addressLine1: formData.addressLine1,
        addressLine2: formData.addressLine2,
        city: formData.city,
        district: formData.district,
        state: formData.state,
        pincode: formData.pincode
      };

      console.log('STEP 4 - Final Registration Data:', registrationData);

      const response = await postMethod({
        url: 'customers/secure/hub/signup',
        payload: registrationData,
        token: token
      });

      console.log('Registration response:', response);

      if (response.success) {
        await AsyncStorage.setItem('@hubUser', JSON.stringify(response.data.hubUser));
        navigation.replace('MyPost');
      } else {
        Alert.alert('Registration Failed', response.error?.message || 'Registration failed');
      }

    } catch (error) {
      console.error('Registration error:', error);
      Alert.alert(
        'Registration Failed',
        'There was a problem with your registration. Please try again.'
      );
    }
  };

  return (
    <View style={styles.container}>
      {step === 1 && renderStep1()}
      {step === 2 && renderStep2()}
      {step === 3 && renderStep3()}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  stepContainer: {
    flex: 1,
    padding: 20,
  },
  headerContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 44,
    marginBottom: 40,
  },
  logoCircle: {
    width: 100,
    height: 100,
    backgroundColor: '#F8BD00',
    alignItems:'center',
    justifyContent:'center',
    borderRadius: 50,
  },
  headerTextContainer: {
    marginLeft: 20,
  },
  headerTitle: {
    fontFamily: 'Gabarito',
    fontSize: 34,
    color: '#F8BD00',
    fontWeight: '500',
  },
  headerSubtitle: {
    fontFamily: 'Gabarito',
    fontSize: 20,
    color: '#000000',
  },
  sectionTitle: {
    fontFamily: 'Gabarito',
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.5)',
    marginBottom: 20,
  },
  stepIndicator: {
    position: 'absolute',
    right: 0,
    top: 0,
    fontFamily: 'Gabarito',
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.5)',
  },
  inputGroup: {
    flexDirection: 'row',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(0, 0, 0, 0.3)',
    marginBottom: 20,
  },
  input: {
    flex: 1,
    fontFamily: 'Gabarito',
    fontSize: 16,
    color: '#979797',
    paddingVertical: 10,
  },
  radioTitle: {
    fontFamily: 'Gabarito',
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.5)',
    marginTop: 20,
    marginBottom: 15,
  },
  radioItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
  },
  radioLabel: {
    fontFamily: 'Gabarito',
    fontSize: 16,
    color: '#979797',
    marginLeft: 10,
  },
  nextButton: {
    width: 97,
    height: 35,
    backgroundColor: '#F8BD00',
    borderRadius: 26,
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
    marginTop: 20,
  },
  buttonText: {
    fontFamily: 'Gabarito',
    fontSize: 16,
    color: '#FFFFFF',
  },
  ellipse1: {
    position: 'absolute',
    width: 200,
    height: 200,
    left: 333,
    top: 404,
    backgroundColor: 'rgba(255, 139, 54, 0.3)',
    borderRadius: 100,
    zIndex: -1,
  },
  ellipse2: {
    position: 'absolute',
    width: 283,
    height: 277,
    left: -173,
    top: 700,
    backgroundColor: 'rgba(255, 139, 54, 0.67)',
    borderRadius: 141.5,
    zIndex: -1,
  },
  scrollContent: {
    flexGrow: 1,
    
    marginLeft:'5%',
    paddingBottom: 20,
  },
  headerImageContainer: {
    alignItems: 'center',
    // marginTop: 83,
    marginBottom: 35,
  },
  bankImage: {
    width: 78,
    height: 78,
  },
  formSection: {
    // paddingHorizontal: 37,
    marginTop: 20,
  },
  stepIndicator: {
    position: 'absolute',
    right: 37,
    top: 0,
    fontFamily: 'Gabarito',
    fontSize: 20,
    lineHeight: 24,
    color: 'rgba(0, 0, 0, 0.5)',
  },
  inputGroup: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 25,
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(0, 0, 0, 0.3)',
    marginHorizontal: 15,
  },
  inputIcon: {
    width: 24,
    height: 24,
    marginRight: 10,
  },
  input: {
    flex: 1,
    fontFamily: 'Gabarito',
    fontSize: 16,
    lineHeight: 19,
    color: '#979797',
    paddingVertical: 8,
  },
  nextButton: {
    width: 97,
    height: 35,
    backgroundColor: '#F8BD00',
    borderRadius: 26,
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
    marginTop: 30,
  },
  buttonText: {
    fontFamily: 'Gabarito',
    fontSize: 16,
    lineHeight: 19,
    color: '#FFFFFF',
    textAlign: 'center',
  },
   
  mailImage: {
    width: 78,
    height: 78,
    // marginTop: 83,
  },
  registerButton: {
    width: 97,
    height: 35,
    backgroundColor: '#F8BD00',
    borderRadius: 26,
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
    marginTop: 30,
  },
  termsText: {
    fontFamily: 'Gabarito',
    fontSize: 10,
    lineHeight: 12,
    textAlign: 'center',
    color: '#999999',
    marginTop: 16,
    marginHorizontal: 37,
  },
  termsLink: {
    color: '#F8BD00',
  },
  inputGroup: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 25,
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(0, 0, 0, 0.3)',
    marginHorizontal: 15,
  },
  input: {
    flex: 1,
    fontFamily: 'Gabarito',
    fontSize: 16,
    lineHeight: 19,
    color: '#979797',
    paddingVertical: 8,
  },
  inputIcon: {
    width: 24,
    height: 24,
    marginRight: 10,
    justifyContent: 'center',
    alignItems: 'center',
  },
  formSection: {
    // paddingHorizontal: 37,
    marginTop: 20,
  },
  sectionTitle: {
    fontFamily: 'Gabarito',
    fontSize: 20,
    lineHeight: 24,
    color: 'rgba(0, 0, 0, 0.5)',
  },
  stepIndicator: {
    position: 'absolute',
    right: 37,
    top: 0,
    fontFamily: 'Gabarito',
    fontSize: 20,
    lineHeight: 24,
    color: 'rgba(0, 0, 0, 0.5)',
  },
});

export default BrainBoxRegistration;
